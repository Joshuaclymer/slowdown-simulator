/// <reference types="node" />
import { BridgeRoutes } from './routes';
import { ErrorHandler } from './error';
import { RoutesToBridgeType } from './routes';
import type * as express from 'express';
import http from 'http';
declare class Bridge<Routes extends BridgeRoutes> {
    routes: Routes;
    private config;
    bridgeType: RoutesToBridgeType<Routes>;
    constructor(routes: Routes, config: {
        errorHandler?: ErrorHandler;
        formidable?: any;
    });
    expressMiddleware: () => express.Handler;
    HTTPServer: () => http.Server<typeof http.IncomingMessage, typeof http.ServerResponse>;
}
export declare const initBridge: <Routes extends BridgeRoutes<{}>>({ routes, errorHandler, formidable, }: {
    routes: Routes;
    formidable?: any;
    errorHandler?: ErrorHandler | undefined;
}) => Bridge<Routes>;
export {};
//# sourceMappingURL=bridge.d.ts.map