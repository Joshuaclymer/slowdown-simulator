"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MiddelwaresHandler = void 0;
const handler_1 = require("../handler");
const error_1 = require("../../error");
class MiddelwaresHandler extends handler_1.AbstractHandler {
    handlers;
    constructor(handlers) {
        super();
        this.handlers = handlers;
    }
    handle = async (data) => {
        // All the middlewares are executed simultaneously
        const results = await Promise.all(this.handlers.map(async (handler) => handler.handle(data)));
        // If one middleware returns an error, we directly return the error to the client
        for (const result of results)
            if ((0, error_1.isBridgeError)(result))
                return result;
        return super.handle({ ...data, middlewares: Object.assign({}, ...results) });
    };
}
exports.MiddelwaresHandler = MiddelwaresHandler;
//# sourceMappingURL=middleware.js.map